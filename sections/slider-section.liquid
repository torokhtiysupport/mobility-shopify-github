{{ 'slider-section.css' | asset_url | stylesheet_tag }}


<div class="section-slider-container">
  <div class="page-width">
    <div class="slider-container">
      <div class="section-slider">
      <h2 class="section-slider__title">{{ section.settings.section_title }}</h2>
      <p class="section-slider__text">{{ section.settings.section_text }}</p>
          {% for block in section.blocks %}
              <div class="section-slider__slide">
                <img src="{{ block.settings.image | img_url: 'original' }}" width="" height="" alt="{{ block.settings.alt_tag }}">
              </div>
          {% endfor %}
      </div>
      <button class="section-slider__prev">&#10094;</button>
      <button class="section-slider__next">&#10095;</button>
    </div>
  </div>
</div>

{% schema %}
  {
  "name": "üëæSlider Section",
  "class": "section",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "section_title",
      "label": "Section Title"
    },
    {
      "type": "textarea",
      "id": "section_text",
      "label": "Section Text"
    }
  ],
  "blocks": [
    {
      "type": "column",
      "name": "Column",
      "settings": [
        {
          "type": "image_picker",
          "id": "image",
          "label": "Image"
        },
        {
          "type": "text",
          "id": "alt_tag",
          "label": "Alt tag"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "üëæSlider Section"
    }
  ]
}
{% endschema %}

<script>
    document.addEventListener("DOMContentLoaded", function() {
        const slider = document.querySelector('.section-slider');
        const slides = document.querySelectorAll('.section-slider__slide');
        const prevBtn = document.querySelector('.section-slider__prev');
        const nextBtn = document.querySelector('.section-slider__next');
        let currentIndex = 0;
        const slideWidth = slides[0].clientWidth;
    
        function goToSlide(index) {
    if (index < 0) {
        index = slides.length - 1;
    } else if (index >= slides.length) {
        index = 0;
    }
    currentIndex = index;
    const offset = -currentIndex * slideWidth;
    
    // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –∏–Ω–¥–µ–∫—Å —Ä–∞–≤–µ–Ω –ø–æ—Å–ª–µ–¥–Ω–µ–º—É —Å–ª–∞–π–¥—É, –ø–æ–∫–∞–∑–∞—Ç—å –ø–µ—Ä–≤—ã–π —Å–ª–∞–π–¥
    if (currentIndex === slides.length - 1) {
        currentIndex = 0;
        offset = 0;
    }

    slider.style.transform = `translateX(${offset}px)`;
}
    
        function slideNext() {
            goToSlide(currentIndex + 1);
        }
    
        function slidePrev() {
            goToSlide(currentIndex - 1);
        }
    
        prevBtn.addEventListener('click', slidePrev);
        nextBtn.addEventListener('click', slideNext);
    
        let touchStartX = 0;
        let touchEndX = 0;
    
        slider.addEventListener('touchstart', function(event) {
            touchStartX = event.touches[0].clientX;
        });
    
        slider.addEventListener('touchend', function(event) {
            touchEndX = event.changedTouches[0].clientX;
            if (touchEndX < touchStartX) {
                slideNext();
            } else if (touchEndX > touchStartX) {
                slidePrev();
            }
        });
    });
</script>
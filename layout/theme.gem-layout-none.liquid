{% comment %}
	GEMPAGE BUILDER (https://apps.shopify.com/gempage)

	You SHOULD NOT modify source code in this page because
	It is automatically generated from GEMPAGE BUILDER
	Try to edit page with the live editor.
{% endcomment %}
{%- capture direction -%}{%- render 'direction' -%}{%- endcapture -%}
<!doctype html>
<html class="no-js" lang="{{ request.locale.iso_code }}" dir="{{ direction }}">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="theme-color" content="">
    <link rel="canonical" href="{{ canonical_url }}">
    <link rel="preconnect" href="https://cdn.shopify.com" crossorigin>
    <!-- jquery for slick slider -->
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <!-- Slick Slider -->
    <script src="{{ 'slick.min.js' | asset_url }}"></script>
    {{ 'slick.css' | asset_url | stylesheet_tag }}

    {%- if settings.favicon != blank -%}
      <link rel="icon" type="image/png" href="{{ settings.favicon | image_url: width: 32, height: 32 }}">
    {%- endif -%}

    {%- liquid
      assign body_font = settings.type_body_font
      assign heading_font = settings.type_header_font
      assign body_font_bold_weight = body_font.weight | plus: 300 | at_most: 1000 | append: ''
      assign body_font_bold = body_font | font_modify: 'weight', body_font_bold_weight
      unless body_font_bold
        assign body_font_bold = body_font | font_modify: 'weight', 'bold'
      endunless
      assign body_font_italic = body_font | font_modify: 'style', 'italic'
      assign body_font_bold_italic = body_font_bold | font_modify: 'style', 'italic'
      if settings.auto_generate_font_weight
        assign body_font_medium_weight = body_font.weight | plus: 100 | at_most: 600 | at_least: body_font.weight | append: ''
        assign body_font_medium = body_font | font_modify: 'weight', body_font_medium_weight

        assign body_font_large_weight = body_font.weight | plus: 200 | at_most: 600 | at_least: body_font.weight | append: ''
        assign body_font_large = body_font | font_modify: 'weight', body_font_large_weight
        
        assign heading_font_bold_weight = heading_font.weight | plus: 300 | at_most: 1000 | append: ''
        assign heading_font_bold = heading_font | font_modify: 'weight', heading_font_bold_weight
        unless heading_font_bold
          assign heading_font_bold = heading_font | font_modify: 'weight', 'bold'
        endunless

        assign heading_font_bold_rte = heading_font_bold
        
        assign heading_font_medium_weight = heading_font.weight | plus: 100 | at_most: 600 | at_least: heading_font.weight | append: ''
        assign heading_font_medium = heading_font | font_modify: 'weight', heading_font_medium_weight
        
        assign heading_font_semi_bold_weight = heading_font.weight | plus: 200 | at_most: 600 | at_least: heading_font.weight | append: ''
        assign heading_font_semi_bold = heading_font | font_modify: 'weight', heading_font_semi_bold_weight
      else
        assign body_font_medium = body_font
        assign body_font_large = body_font
        
        assign heading_font_bold = heading_font

        assign heading_font_bold_rte = heading_font | font_modify: 'weight', 'bold'
        assign heading_font_medium = heading_font
        
        assign heading_font_semi_bold = heading_font
      endif  
    %}

    {% # theme-check-disable AssetPreload %}
    {%- unless settings.type_body_font.system? -%}
      <link rel="preload" as="font" href="{{ body_font | font_url }}" type="font/woff2" crossorigin>
      {%- if body_font != body_font_bold -%}
        <link rel="preload" as="font" href="{{ body_font_bold | font_url }}" type="font/woff2" crossorigin>
      {%- endif -%}
    {%- endunless -%}

    {%- unless settings.type_header_font.system? -%}
      {%- if heading_font != body_font and heading_font != body_font_bold -%}
        <link rel="preload" as="font" href="{{ heading_font | font_url }}" type="font/woff2" crossorigin>
      {%- endif -%}
      {%- if heading_font_bold != body_font_bold and heading_font_bold != body_font and heading_font_bold != heading_font -%}
        <link rel="preload" as="font" href="{{ heading_font_bold | font_url }}" type="font/woff2" crossorigin>
      {%- endif -%}
    {%- endunless -%}
    {% # theme-check-enable AssetPreload %}

    {%- unless request.page_type == 'list-collections' -%}
      <title>
        {{ page_title }}
        {%- if current_tags %} &ndash; tagged "{{ current_tags | join: ', ' }}"{% endif -%}
        {%- if current_page != 1 %} &ndash; Page {{ current_page }}{% endif -%}
      </title>

      {% if page_description %}
        <meta name="description" content="{{ page_description | escape }}">
      {% endif %}
    {%- else -%}  
      <title>{{ settings.collections_list_meta_title | default: page_title }}</title>
      <meta name="description" content="{{ settings.collections_list_meta_description | default: page_description | escape }}">
    {%- endunless -%}

    {%- render 'meta-tags' -%}

    <script>
      window.shopUrl = '{{ request.origin }}';
      window.routes = {
        cart_url: '{{ routes.cart_url }}',
        cart_add_url: '{{ routes.cart_add_url }}',
        cart_change_url: '{{ routes.cart_change_url }}',
        cart_update_url: '{{ routes.cart_update_url }}',
        predictive_search_url: '{{ routes.predictive_search_url }}',
        search_url: '{{ routes.search_url }}',
        product_recommendations_url: '{{ routes.product_recommendations_url }}'
      };

      window.photoswipeUrls = {
        lib: '{{ "photoswipe.umd.min.js" | asset_url }}',
        loaded: false
      };

      window.hasQuickAddDrawer = {% if request.design_mode and request.page_type == 'product' %}true{% else %}false{% endif %};
      window.hasQuickViewModal = {% if request.design_mode and request.page_type == 'product' %}true{% else %}false{% endif %};

      window.cartStrings = {
        error: `{{ 'sections.cart.cart_error' | t }}`,
        quantityError: `{{ 'sections.cart.cart_quantity_error_html' | t: quantity: '[quantity]' }}`,
        success: `{{ 'sections.cart.cart_success' | t }}`
      }

      window.variantStrings = {
        addToCart: `{{ 'products.product.add_to_cart' | t }}`,
        soldOut: `{{ 'products.product.sold_out' | t }}`,
        unavailable: `{{ 'products.product.unavailable' | t }}`,
        unavailable_with_option: `{{ 'products.product.value_unavailable' | t: option_value: '[value]' }}`
      }

      window.accessibilityStrings = {
        imageAvailable: `{{ 'products.product.media.image_available' | t: index: '[index]' }}`,
        shareSuccess: `{{ 'general.share.success_message' | t }}`,
        copyToClipboard: `{{ 'general.share.copy_to_clipboard' | t }}`,
        pauseSlideshow: `{{ 'sections.slideshow.pause_slideshow' | t }}`,
        playSlideshow: `{{ 'sections.slideshow.play_slideshow' | t }}`,
        {%- if request.design_mode -%}countdownErrorMsg: `{{ 'general.countdown.error_msg' | t }}`,{%- endif -%}
        countdownExpiredMsg: `{{ 'general.countdown.expired_msg' | t }}`
      };

      {%- if settings.recently_viewed_enable -%}
        window.recentlyViewedStrings = {
          empty: {{ 'general.floating_bar.recently_viewed_empty' | t | json }}
        };
      {%- endif -%}  

      {%- if settings.enable_product_compare -%}
        window.addedCompareStrings = {
          success: {{ 'templates.compare.success' | t | json }}
        };
      {%- endif -%}

      {%- if settings.free_shipping_enable -%}
        window.freeShippingBarExcludeProducts = {%- if settings.free_shipping_exclude_products != blank and settings.free_shipping_exclude_products.count > 0 -%}{{ settings.free_shipping_exclude_products | map: 'id' | json }}{%- else -%}[]{%- endif -%};
      {%- endif -%}  

      window.moneyFormat = {% unless settings.currency_code_enabled %}{{ shop.money_format | json }}{% else %}{{ shop.money_with_currency_format | json }}{% endunless %};
      window.loadedBackgroundColorSwatches = {%- if request.design_mode or template.name == 'collection' or template.name == 'search' -%}true{%- else -%}false{%- endif -%};
      window.currencyMain = {{ shop.currency | json }};
      window.appearAnimate = {% if settings.enable_appear_effect %}true{% else %}false{% endif %};
    </script>
    {%- if settings.google_maps_api_key != blank -%}
      <script>
        (g=>{var h,a,k,p="The Google Maps JavaScript API",c="google",l="importLibrary",q="__ib__",m=document,b=window;b=b[c]||(b[c]={});var d=b.maps||(b.maps={}),r=new Set,e=new URLSearchParams,u=()=>h||(h=new Promise(async(f,n)=>{await (a=m.createElement("script"));e.set("libraries",[...r]+"");for(k in g)e.set(k.replace(/[A-Z]/g,t=>"_"+t[0].toLowerCase()),g[k]);e.set("callback",c+".maps."+q);a.src=`https://maps.${c}apis.com/maps/api/js?`+e;d[q]=f;a.onerror=()=>h=n(Error(p+" could not load."));a.nonce=m.querySelector("script[nonce]")?.nonce||"";m.head.append(a)}));d[l]?console.warn(p+" only loads once. Ignoring:",g):d[l]=(f,...n)=>r.add(f)&&u().then(()=>d[l](f,...n))})({
          key: "{{ settings.google_maps_api_key }}",
          v: "weekly"
        });
      </script>
    {%- endif -%}  

    {{ content_for_header }}

    <script src="{{ 'critical-global.js' | asset_url }}" defer="defer"></script>
    <script src="{{ 'motion.min.js' | asset_url }}" defer="defer"></script>

    {%- render 'critical-inline-styles', body_font: body_font, body_font_bold: body_font_bold, body_font_medium: body_font_medium, body_font_large: body_font_large, body_font_italic: body_font_italic, body_font_bold_italic: body_font_bold_italic, heading_font: heading_font, heading_font_bold: heading_font_bold, heading_font_medium: heading_font_medium, heading_font_semi_bold: heading_font_semi_bold, heading_font_bold_rte: heading_font_bold_rte, only_variables: false, direction: direction -%}

    {{ 'critical-base.css' | asset_url | stylesheet_tag: preload: true }}
    <link rel="stylesheet" href="{{ 'component-card.css' | asset_url }}" media="print" onload="this.media='all'">
   
    <script>document.documentElement.className = document.documentElement.className.replace('no-js', 'js');
    if (Shopify.designMode) {
      document.documentElement.classList.add('shopify-design-mode');
    }
    </script>

    
  {% render 'gp-head' %}
<!--Gem_Page_Header_Script-->
{% render 'gem-app-header-scripts' %}
<!--End_Gem_Page_Header_Script-->
</head>

  <body>
<div class="gem-container">
	{{ content_for_layout }}
</div><!-- end .gem-container --><!--Gem_Page_Footer_Script-->
  {%- liquid
    assign gpTemplateSuffix = template.suffix
    assign arrSplitSuffix = gpTemplateSuffix | split: '-'
    if gpTemplateSuffix contains 'gem-' and gpTemplateSuffix contains '-template' and arrSplitSuffix.size == 3
      assign isV6GpTemplate = true
    endif
    assign gpShopMeta = shop.metafields.gempages
    if gpShopMeta
      if gpShopMeta['productV6-default'] == 'true' and request.page_type == 'product'
        assign isProductDefault = true
      endif
      if gpShopMeta['collectionV6-default'] == 'true' and request.page_type == 'collection'
        assign isCollectionDefault = true
      endif
      if gpShopMeta['indexV6-default'] == 'true' and request.page_type == 'index'
        assign isIndexDefault = true
      endif
      if isProductDefault or isCollectionDefault or isIndexDefault or isPreviewV6
        assign isV6GpTemplate = true
      endif
    endif
  %}
  {% if isV6GpTemplate %}
    {% render 'gem-app-footer-scripts', GEM_FOOTER_SCRIPT: GEM_FOOTER_SCRIPT %}
  {% endif %}
<!--End_Gem_Page_Footer_Script-->



</body>
</html>